// <auto-generated />
using System;
using Expandeco.JobInterview.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Expandeco.JobInterview.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240121223534_ModifiedTranslationDeadlineProperty")]
    partial class ModifiedTranslationDeadlineProperty
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Expandeco.JobInterview.Data.Deadline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DeadlineDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("DeadlineDateTimeString")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Deadline");
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Angličtina"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Slovenčina"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Čeština"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Nemčina"
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DeadlineId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeadlineString")
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceLanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetLanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedText")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DeadlineId");

                    b.HasIndex("SourceLanguageId");

                    b.HasIndex("TargetLanguageId");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignedToId = 6,
                            CreatedById = 10,
                            SourceLanguageId = 1,
                            TargetLanguageId = 4,
                            Text = "Saepe omnis rerum quia quam quo consequatur unde aperiam voluptatem.",
                            Title = "aliquid et dolorem"
                        },
                        new
                        {
                            Id = 2,
                            AssignedToId = 5,
                            CreatedById = 9,
                            SourceLanguageId = 1,
                            TargetLanguageId = 4,
                            Text = "Qui eveniet saepe provident rem et velit. Nesciunt omnis quasi voluptatem. Quam quia et voluptas id. Quia labore dolorem nostrum quo a quis in aut. Velit eligendi natus minus occaecati tempore vitae.",
                            Title = "ad tenetur rem"
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 10,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "Sit sunt ipsa nemo velit nesciunt et culpa.",
                            Title = "quam quo perspiciatis"
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 9,
                            SourceLanguageId = 1,
                            TargetLanguageId = 3,
                            Text = "Est et perspiciatis. Ex dolores a temporibus. Praesentium explicabo ea porro rerum a sit voluptatibus ipsum. Aliquid distinctio vel voluptatibus ea.",
                            Title = "distinctio et dolores"
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 10,
                            SourceLanguageId = 1,
                            TargetLanguageId = 4,
                            Text = "Vitae fugiat modi. Magnam velit aperiam dicta est eum accusamus officiis illum. Perspiciatis veniam placeat omnis unde omnis rerum est impedit dolorem. Molestiae repudiandae libero. Ut doloribus aliquid soluta placeat. Impedit et libero dolorem in aut beatae labore.",
                            Title = "sunt eum modi"
                        },
                        new
                        {
                            Id = 6,
                            AssignedToId = 5,
                            CreatedById = 9,
                            SourceLanguageId = 2,
                            TargetLanguageId = 3,
                            Text = "Distinctio quam repudiandae et blanditiis rerum et. Sit aut voluptatem. Consectetur eius illo sed delectus. Ut aut et maiores quisquam nam ut fuga dolore.",
                            Title = "autem eum aut"
                        },
                        new
                        {
                            Id = 7,
                            CreatedById = 10,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "maxime",
                            Title = "in et quibusdam"
                        },
                        new
                        {
                            Id = 8,
                            AssignedToId = 2,
                            CreatedById = 8,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "Veniam et cupiditate sint quidem aspernatur accusamus laborum.",
                            Title = "sint aliquam ipsum"
                        },
                        new
                        {
                            Id = 9,
                            CreatedById = 10,
                            SourceLanguageId = 1,
                            TargetLanguageId = 4,
                            Text = "Laudantium consectetur expedita earum mollitia neque exercitationem est quos. Libero cumque iure esse quibusdam aliquid. Rerum sed qui repellat magni provident distinctio. Ut exercitationem enim et non illum nesciunt. Autem voluptates vitae aut recusandae quia sequi ullam.",
                            Title = "vitae recusandae aut"
                        },
                        new
                        {
                            Id = 10,
                            CreatedById = 10,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "Et ex sed saepe dolorem odit ipsum. Quidem sed inventore aut reprehenderit. Voluptatem nobis accusantium incidunt quasi dolorum. Omnis aut hic ab fuga quae necessitatibus asperiores veniam. Nostrum natus placeat odit.",
                            Title = "quaerat optio iusto"
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Matej Chudík",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Irma Hlaváčeková",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Zuzana Straková",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Valéria Trubenová",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Václav Debnár",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Izabela Šoltésová",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Klaudia Bukovská",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kornélia Malíšeková",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Valér Lepšík",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Monika Kolniková",
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Manažér"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Prekladateľ"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Klient"
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.Translation", b =>
                {
                    b.HasOne("Expandeco.JobInterview.Data.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("Expandeco.JobInterview.Data.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expandeco.JobInterview.Data.Deadline", "Deadline")
                        .WithMany()
                        .HasForeignKey("DeadlineId");

                    b.HasOne("Expandeco.JobInterview.Data.Language", "SourceLanguage")
                        .WithMany()
                        .HasForeignKey("SourceLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expandeco.JobInterview.Data.Language", "TargetLanguage")
                        .WithMany()
                        .HasForeignKey("TargetLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("Deadline");

                    b.Navigation("SourceLanguage");

                    b.Navigation("TargetLanguage");
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.User", b =>
                {
                    b.HasOne("Expandeco.JobInterview.Data.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
