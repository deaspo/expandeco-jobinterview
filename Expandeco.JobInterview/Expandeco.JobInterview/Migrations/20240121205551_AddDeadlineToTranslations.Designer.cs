// <auto-generated />
using System;
using Expandeco.JobInterview.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Expandeco.JobInterview.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240121205551_AddDeadlineToTranslations")]
    partial class AddDeadlineToTranslations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Expandeco.JobInterview.Data.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Angličtina"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Slovenčina"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Čeština"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Nemčina"
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.Translation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AssignedToId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CreatedById")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("TEXT");

                    b.Property<int>("SourceLanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetLanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TranslatedText")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AssignedToId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("SourceLanguageId");

                    b.HasIndex("TargetLanguageId");

                    b.ToTable("Translations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 8,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "Nulla minus quis quia.",
                            Title = "nobis voluptates architecto"
                        },
                        new
                        {
                            Id = 2,
                            AssignedToId = 7,
                            CreatedById = 10,
                            SourceLanguageId = 2,
                            TargetLanguageId = 3,
                            Text = "odit",
                            Title = "sunt fugit atque"
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 9,
                            SourceLanguageId = 1,
                            TargetLanguageId = 3,
                            Text = "quod",
                            Title = "modi sed qui"
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 9,
                            SourceLanguageId = 2,
                            TargetLanguageId = 3,
                            Text = "Doloremque ipsum enim in. Deserunt sunt quia fugit et error ducimus dolor quidem. Accusamus omnis esse delectus alias laborum quis ut ducimus explicabo.",
                            Title = "illo omnis laudantium"
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 9,
                            SourceLanguageId = 1,
                            TargetLanguageId = 4,
                            Text = "Quae dignissimos harum nostrum.\nNam ipsa nobis eum impedit tempora nesciunt nulla inventore.\nUt maiores nobis hic voluptatem quasi ut minus.\nNobis animi doloremque.",
                            Title = "ipsum quia est"
                        },
                        new
                        {
                            Id = 6,
                            CreatedById = 9,
                            SourceLanguageId = 1,
                            TargetLanguageId = 4,
                            Text = "iste",
                            Title = "dolor fugit illo"
                        },
                        new
                        {
                            Id = 7,
                            AssignedToId = 4,
                            CreatedById = 8,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "Omnis eveniet temporibus maiores consequuntur ut alias. Voluptas quis beatae ut officiis iure et harum in. Voluptatibus illum nihil pariatur quos quia rerum autem. Maiores praesentium maiores placeat. Cumque voluptatem ea quas.",
                            Title = "culpa numquam explicabo"
                        },
                        new
                        {
                            Id = 8,
                            CreatedById = 10,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "Aliquid pariatur ab perferendis fugiat non dolor quae soluta distinctio.",
                            Title = "et dolores eligendi"
                        },
                        new
                        {
                            Id = 9,
                            CreatedById = 10,
                            SourceLanguageId = 2,
                            TargetLanguageId = 3,
                            Text = "Laborum itaque iusto.\nEt atque dicta temporibus maiores.\nSit aut mollitia veniam cumque ipsam voluptatem.\nIllum quo placeat.\nQuaerat quia suscipit.\nPorro repudiandae sed qui.",
                            Title = "voluptas vel nemo"
                        },
                        new
                        {
                            Id = 10,
                            AssignedToId = 4,
                            CreatedById = 8,
                            SourceLanguageId = 2,
                            TargetLanguageId = 4,
                            Text = "Repudiandae nam molestiae consequatur.",
                            Title = "quaerat libero voluptatem"
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Vít Krajíček",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Libuša Šoltésová",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Igor Dávid",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Milota Dočolomanská",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Rastislav Cíger",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sidónia Kaliská",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Drahomíra Masaryková",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            Name = "Jakub Slota",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Dezider Jendek",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            Name = "Dezider Šulc",
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UserTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Manažér"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Prekladateľ"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Klient"
                        });
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.Translation", b =>
                {
                    b.HasOne("Expandeco.JobInterview.Data.User", "AssignedTo")
                        .WithMany()
                        .HasForeignKey("AssignedToId");

                    b.HasOne("Expandeco.JobInterview.Data.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expandeco.JobInterview.Data.Language", "SourceLanguage")
                        .WithMany()
                        .HasForeignKey("SourceLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expandeco.JobInterview.Data.Language", "TargetLanguage")
                        .WithMany()
                        .HasForeignKey("TargetLanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignedTo");

                    b.Navigation("CreatedBy");

                    b.Navigation("SourceLanguage");

                    b.Navigation("TargetLanguage");
                });

            modelBuilder.Entity("Expandeco.JobInterview.Data.User", b =>
                {
                    b.HasOne("Expandeco.JobInterview.Data.UserType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });
#pragma warning restore 612, 618
        }
    }
}
